---
import { getImage } from "astro:assets";
import { SEO } from "astro-seo";

interface BaseProps {
  title: string;
  description: string;
  noindex?: boolean;
}

interface GenProps extends BaseProps {
  type: "general";
  image: ImageMetadata;
}

const { title, description, image, noindex = false } = Astro.props as GenProps;

const canonicalUrl = new URL(Astro.url.pathname, Astro.site);

let optimizedImage;
if (image) {
  optimizedImage = await getImage({
    src: image,
    format: "webp",
    quality: "high",
    width: 1200,
  });
}

function trimEndSlash(str: string) {
  if (str[str.length - 1] === "/") {
    return str.slice(0, -1);
  } else {
    return str;
  }
}

// put together the image URL
const imageUrl =
  trimEndSlash(Astro.site?.toString() || "") + optimizedImage?.src;
---

<SEO
  title={title}
  description={description}
  canonical={canonicalUrl.toString()}
  openGraph={{
    basic: {
      title: title,
      type: "website",
      image: imageUrl,
      url: canonicalUrl.toString(),
    },
    optional: {
      description: description,
      // siteName: title,
    },
    image: {
      type: "image/webp",
      width: optimizedImage?.attributes.width || "1200",
      height: optimizedImage?.attributes.height || "800",
      alt: "profile image",
    },
  }}
  noindex={noindex}
  nofollow={noindex}
/>
